name: Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # 代码检查
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm cache clean --force
          npm install --force
      
      - name: Run TypeScript type check
        run: npm run typecheck
      
      - name: Run ESLint
        run: npm run lint

  # 构建 Web 版本
  build-web:
    name: Build Web Version
    needs: lint-and-typecheck
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm cache clean --force
          npm install --force
          # Force install platform-specific rollup binary
          npm install @rollup/rollup-linux-x64-gnu --force
      
      - name: Build Web
        run: npm run build:web
      
      - name: Upload Web artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: dist/
          retention-days: 7

  # 构建 Tauri 版本（多平台）
  build-tauri:
    name: Build Tauri - ${{ matrix.platform.name }}
    needs: lint-and-typecheck
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: 'Linux'
            os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - name: 'macOS-x64'
            os: macos-latest
            rust_target: x86_64-apple-darwin
          - name: 'macOS-arm64'
            os: macos-latest
            rust_target: aarch64-apple-darwin
          - name: 'Windows'
            os: windows-latest
            rust_target: x86_64-pc-windows-msvc
    
    runs-on: ${{ matrix.platform.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.rust_target }}
      
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      
      # Linux 特定依赖
      - name: Install Linux dependencies
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          # For Ubuntu 24.04, we need to use webkit2gtk-4.1 instead of 4.0
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev librsvg2-dev
      
      - name: Install dependencies
        run: |
          npm cache clean --force
          npm install --force
          # Force install platform-specific rollup binary for each target
          if [ "${{ matrix.platform.rust_target }}" == "x86_64-unknown-linux-gnu" ]; then
            npm install @rollup/rollup-linux-x64-gnu --force
          elif [ "${{ matrix.platform.rust_target }}" == "x86_64-apple-darwin" ]; then
            npm install @rollup/rollup-darwin-x64 --force
          elif [ "${{ matrix.platform.rust_target }}" == "aarch64-apple-darwin" ]; then
            npm install @rollup/rollup-darwin-arm64 --force
          elif [ "${{ matrix.platform.rust_target }}" == "x86_64-pc-windows-msvc" ]; then
            npm install @rollup/rollup-win32-x64-msvc --force
          fi
        shell: bash
      
      - name: Build Tauri app
        run: npm run tauri build -- --target ${{ matrix.platform.rust_target }}
        
      - name: List build outputs
        run: |
          echo "=== Finding all executables and bundles ==="
          find src-tauri/target -type f \( -name "*.dmg" -o -name "*.app" -o -name "*.msi" -o -name "*.exe" -o -name "*.deb" -o -name "*.AppImage" -o -name "iprompt*" \) 2>/dev/null || true
          echo "=== Checking standard bundle location ==="
          ls -la src-tauri/target/release/bundle/ 2>/dev/null || true
          echo "=== Checking target-specific bundle location ==="
          ls -la src-tauri/target/${{ matrix.platform.rust_target }}/release/bundle/ 2>/dev/null || true
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-${{ matrix.platform.name }}
          path: |
            src-tauri/target/release/bundle/**/*
            src-tauri/target/${{ matrix.platform.rust_target }}/release/bundle/**/*
            src-tauri/target/release/iprompt*
            src-tauri/target/${{ matrix.platform.rust_target }}/release/iprompt*
          retention-days: 7

  # 创建 Release（仅在打 tag 时触发）
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, build-web, build-tauri]
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Web artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-dist
          path: web-dist
      
      - name: Create Web archive
        run: |
          cd web-dist
          zip -r ../iprompt-web-${{ github.ref_name }}.zip .
          cd ..
      
      - name: Upload Web archive to release
        uses: softprops/action-gh-release@v1
        with:
          files: iprompt-web-${{ github.ref_name }}.zip
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}